// Auto-generated by MAZE
package nl.uu.tests.maze.generated.benchmarks;

import java.lang.Exception;
import nl.uu.maze.benchmarks.ConvergingPaths;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public class ConvergingPathsTest {
  @Test
  public void testEvaluate1() throws Exception {
    int marg0 = -577405356;
    int marg1 = 772246595;
    int marg2 = 997851128;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate2() throws Exception {
    int marg0 = -1022278161;
    int marg1 = 918326739;
    int marg2 = 404461661;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate3() throws Exception {
    int marg0 = -1155893168;
    int marg1 = 330530551;
    int marg2 = 431470014;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate4() throws Exception {
    int marg0 = -1073797686;
    int marg1 = -1549639713;
    int marg2 = 995742462;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate5() throws Exception {
    int marg0 = 1220991126;
    int marg1 = 1562411766;
    int marg2 = -1655033529;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate6() throws Exception {
    int marg0 = -468425527;
    int marg1 = 419988910;
    int marg2 = 2002247598;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate7() throws Exception {
    int marg0 = -1278381931;
    int marg1 = 1708618746;
    int marg2 = 1399818338;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate8() throws Exception {
    int marg0 = 670039038;
    int marg1 = -2147352150;
    int marg2 = 1610612733;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate9() throws Exception {
    int marg0 = 2002445309;
    int marg1 = 613453483;
    int marg2 = 1740637199;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate10() throws Exception {
    int marg0 = 1461098301;
    int marg1 = 2093808219;
    int marg2 = -1566501101;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate11() throws Exception {
    int marg0 = -82927619;
    int marg1 = 1986497195;
    int marg2 = -533529609;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate12() throws Exception {
    int marg0 = 330051583;
    int marg1 = 732180543;
    int marg2 = 1676523469;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate13() throws Exception {
    int marg0 = 988024821;
    int marg1 = -2136938476;
    int marg2 = -1165146;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate14() throws Exception {
    int marg0 = -303174929;
    int marg1 = -2126241275;
    int marg2 = 2147483645;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate15() throws Exception {
    int marg0 = 1073774594;
    int marg1 = -16777218;
    int marg2 = 798998401;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate16() throws Exception {
    int marg0 = 435624399;
    int marg1 = 620569999;
    int marg2 = 1939357486;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate17() throws Exception {
    int marg0 = 694139383;
    int marg1 = 1663057343;
    int marg2 = -345657427;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate18() throws Exception {
    int marg0 = 233129689;
    int marg1 = 240068247;
    int marg2 = -1540959329;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate19() throws Exception {
    int marg0 = 1743634431;
    int marg1 = -1655283713;
    int marg2 = -1624182805;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate20() throws Exception {
    int marg0 = -2147483639;
    int marg1 = -2147483648;
    int marg2 = -2;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate21() throws Exception {
    int marg0 = 158856949;
    int marg1 = -209698377;
    int marg2 = 1610800303;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate22() throws Exception {
    int marg0 = 1694449662;
    int marg1 = 1224733117;
    int marg2 = 948675918;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate23() throws Exception {
    int marg0 = 2126512127;
    int marg1 = 1042257658;
    int marg2 = 773658296;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate24() throws Exception {
    int marg0 = 1440978948;
    int marg1 = 1576228351;
    int marg2 = 38145237;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate25() throws Exception {
    int marg0 = 115179519;
    int marg1 = 1432945795;
    int marg2 = 823705870;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate26() throws Exception {
    int marg0 = -1979535537;
    int marg1 = 746847741;
    int marg2 = -1459045251;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate27() throws Exception {
    int marg0 = -1076379745;
    int marg1 = -609967199;
    int marg2 = 1794780442;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate28() throws Exception {
    int marg0 = 85818836;
    int marg1 = 374188905;
    int marg2 = -1431313132;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate29() throws Exception {
    int marg0 = -1169687187;
    int marg1 = -1459382101;
    int marg2 = 133335034;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate30() throws Exception {
    int marg0 = 421012003;
    int marg1 = -2147483647;
    int marg2 = -1;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate31() throws Exception {
    int marg0 = 618184717;
    int marg1 = -2147483634;
    int marg2 = -2;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate32() throws Exception {
    int marg0 = 90;
    int marg1 = 57;
    int marg2 = 0;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate33() throws Exception {
    int marg0 = 1818204099;
    int marg1 = 785671618;
    int marg2 = 67108929;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate34() throws Exception {
    int marg0 = -5111811;
    int marg1 = -1526857730;
    int marg2 = -1961535750;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate35() throws Exception {
    int marg0 = 1914697723;
    int marg1 = 839382778;
    int marg2 = 537097912;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate36() throws Exception {
    int marg0 = -1392098301;
    int marg1 = -755794948;
    int marg2 = 2135382271;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate37() throws Exception {
    int marg0 = -1145182323;
    int marg1 = 190905995;
    int marg2 = -1607903286;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate38() throws Exception {
    int marg0 = -2147483643;
    int marg1 = 49;
    int marg2 = -1658085409;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate39() throws Exception {
    int marg0 = -1061421069;
    int marg1 = 1208385534;
    int marg2 = -121925217;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate40() throws Exception {
    int marg0 = -1130889219;
    int marg1 = 1984115901;
    int marg2 = -1058148611;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate41() throws Exception {
    int marg0 = -1273004161;
    int marg1 = -717679618;
    int marg2 = 1621118459;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate42() throws Exception {
    int marg0 = -1740226873;
    int marg1 = -427256951;
    int marg2 = 935252970;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate43() throws Exception {
    int marg0 = -204940931;
    int marg1 = 2068158851;
    int marg2 = -485443107;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate44() throws Exception {
    int marg0 = -1070590885;
    int marg1 = 1044266943;
    int marg2 = 1597782562;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate45() throws Exception {
    int marg0 = -8922123;
    int marg1 = -1215826946;
    int marg2 = 152513661;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate46() throws Exception {
    int marg0 = 132644829;
    int marg1 = -1052663293;
    int marg2 = 2079856446;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate47() throws Exception {
    int marg0 = 1459900927;
    int marg1 = -1390575905;
    int marg2 = 1206058974;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate48() throws Exception {
    int marg0 = 1704311297;
    int marg1 = -2147483646;
    int marg2 = -2;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate49() throws Exception {
    int marg0 = 1949601774;
    int marg1 = 810806205;
    int marg2 = 762880450;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate50() throws Exception {
    int marg0 = 54;
    int marg1 = 44;
    int marg2 = 0;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate51() throws Exception {
    int marg0 = -327429261;
    int marg1 = -327429271;
    int marg2 = -858291075;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate52() throws Exception {
    int marg0 = 1907144685;
    int marg1 = 500517907;
    int marg2 = -2141960180;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate53() throws Exception {
    int marg0 = -201325665;
    int marg1 = -1467265214;
    int marg2 = -1599799312;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate54() throws Exception {
    int marg0 = 985599673;
    int marg1 = -1571233601;
    int marg2 = -1616392879;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate55() throws Exception {
    int marg0 = 1475637247;
    int marg1 = 1206153210;
    int marg2 = 1149267640;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate56() throws Exception {
    int marg0 = 1073741826;
    int marg1 = 2147483645;
    int marg2 = -1610612737;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate57() throws Exception {
    int marg0 = -1407537429;
    int marg1 = -544376905;
    int marg2 = -2024534692;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate58() throws Exception {
    int marg0 = -2147483604;
    int marg1 = 45;
    int marg2 = -1374714909;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate59() throws Exception {
    int marg0 = -2147483640;
    int marg1 = 16;
    int marg2 = -2147483629;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate60() throws Exception {
    int marg0 = -2145526305;
    int marg1 = 1600126961;
    int marg2 = -1642093926;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate61() throws Exception {
    int marg0 = -1702100155;
    int marg1 = -1682867806;
    int marg2 = 896509955;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate62() throws Exception {
    int marg0 = 1071445319;
    int marg1 = 1131814345;
    int marg2 = -1987955410;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate63() throws Exception {
    int marg0 = -2147483648;
    int marg1 = 49;
    int marg2 = -1610655922;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate64() throws Exception {
    int marg0 = -1477716803;
    int marg1 = 837907120;
    int marg2 = -1987251945;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate65() throws Exception {
    int marg0 = -1445971577;
    int marg1 = 1073741849;
    int marg2 = -1855063691;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate66() throws Exception {
    int marg0 = 178765501;
    int marg1 = 484150782;
    int marg2 = 2003656543;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate67() throws Exception {
    int marg0 = -404751731;
    int marg1 = 1955534883;
    int marg2 = 1256938478;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate68() throws Exception {
    int marg0 = -2136653153;
    int marg1 = 285805218;
    int marg2 = -1232696286;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate69() throws Exception {
    int marg0 = -1413546162;
    int marg1 = -1831862337;
    int marg2 = 879206429;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate70() throws Exception {
    int marg0 = 1323653181;
    int marg1 = -926820815;
    int marg2 = -463914410;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate71() throws Exception {
    int marg0 = -877467762;
    int marg1 = -2147483136;
    int marg2 = -1;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate72() throws Exception {
    int marg0 = 1;
    int marg1 = -2;
    int marg2 = 1;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate73() throws Exception {
    int marg0 = 1480955507;
    int marg1 = 1341511517;
    int marg2 = 2019568778;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate74() throws Exception {
    int marg0 = 2;
    int marg1 = -1073741826;
    int marg2 = 1073741826;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate75() throws Exception {
    int marg0 = 1606414191;
    int marg1 = 1351822178;
    int marg2 = 9511777;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate76() throws Exception {
    int marg0 = -794064009;
    int marg1 = -794064011;
    int marg2 = -2146768881;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate77() throws Exception {
    int marg0 = 1342177287;
    int marg1 = 1342177277;
    int marg2 = -1986102698;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate78() throws Exception {
    int marg0 = -988512255;
    int marg1 = -1795176130;
    int marg2 = -1967307707;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate79() throws Exception {
    int marg0 = 1607217719;
    int marg1 = -862346231;
    int marg2 = -1609860161;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate80() throws Exception {
    int marg0 = 43;
    int marg1 = 21;
    int marg2 = 1;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate81() throws Exception {
    int marg0 = 1631724545;
    int marg1 = 1522204479;
    int marg2 = 964550434;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate82() throws Exception {
    int marg0 = 1716760234;
    int marg1 = 643018401;
    int marg2 = -324550694;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate83() throws Exception {
    int marg0 = -2006286408;
    int marg1 = 120946493;
    int marg2 = -526258765;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate84() throws Exception {
    int marg0 = -2147483640;
    int marg1 = 32;
    int marg2 = -2147483644;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate85() throws Exception {
    int marg0 = 1073741821;
    int marg1 = 1073741828;
    int marg2 = -2058005155;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate86() throws Exception {
    int marg0 = -856048951;
    int marg1 = -801058825;
    int marg2 = -1813247466;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate87() throws Exception {
    int marg0 = -2147483648;
    int marg1 = 47;
    int marg2 = -2147483647;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate88() throws Exception {
    int marg0 = -2147483632;
    int marg1 = 32;
    int marg2 = -2143376767;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate89() throws Exception {
    int marg0 = -1205686526;
    int marg1 = 1342806614;
    int marg2 = -1141113862;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate90() throws Exception {
    int marg0 = 269035259;
    int marg1 = 1671302058;
    int marg2 = 1457246361;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate91() throws Exception {
    int marg0 = 737198047;
    int marg1 = 1563033603;
    int marg2 = -1175748828;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate92() throws Exception {
    int marg0 = -2147483632;
    int marg1 = 27;
    int marg2 = -1077547582;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate93() throws Exception {
    int marg0 = -632299508;
    int marg1 = 1535115288;
    int marg2 = -2017408588;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate94() throws Exception {
    int marg0 = -812076496;
    int marg1 = 1853882394;
    int marg2 = -1174740041;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate95() throws Exception {
    int marg0 = 268435452;
    int marg1 = -2147467261;
    int marg2 = -1073741825;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate96() throws Exception {
    int marg0 = 1462938021;
    int marg1 = -1476522573;
    int marg2 = -439091218;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate97() throws Exception {
    int marg0 = -1073772930;
    int marg1 = -2147418111;
    int marg2 = -1;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate98() throws Exception {
    int marg0 = 813823803;
    int marg1 = -62631970;
    int marg2 = -23245170;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate99() throws Exception {
    int marg0 = 1602026993;
    int marg1 = 1100695166;
    int marg2 = 1562007807;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate100() throws Exception {
    int marg0 = 528807913;
    int marg1 = -2147483647;
    int marg2 = -2;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate101() throws Exception {
    int marg0 = -1073741827;
    int marg1 = -2147483647;
    int marg2 = -1;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate102() throws Exception {
    int marg0 = 112;
    int marg1 = -1073741829;
    int marg2 = 41997085;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate103() throws Exception {
    int marg0 = -1525810177;
    int marg1 = -1660084221;
    int marg2 = 1313325484;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate104() throws Exception {
    int marg0 = 956298477;
    int marg1 = -1247727425;
    int marg2 = -1335107857;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate105() throws Exception {
    int marg0 = -1250337156;
    int marg1 = -1250337158;
    int marg2 = -1788870584;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate106() throws Exception {
    int marg0 = 2113899179;
    int marg1 = 1794105341;
    int marg2 = 704511994;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate107() throws Exception {
    int marg0 = 1985214398;
    int marg1 = 1652555683;
    int marg2 = 1543364575;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate108() throws Exception {
    int marg0 = 1795162111;
    int marg1 = 1174405117;
    int marg2 = 234077692;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate109() throws Exception {
    int marg0 = 535788991;
    int marg1 = 526850494;
    int marg2 = 358945069;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate110() throws Exception {
    int marg0 = 1476395005;
    int marg1 = -1487405059;
    int marg2 = -1627507858;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate111() throws Exception {
    int marg0 = 769654519;
    int marg1 = -1386584938;
    int marg2 = -2143288319;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate112() throws Exception {
    int marg0 = 1430257666;
    int marg1 = 1430257664;
    int marg2 = -1879047818;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate113() throws Exception {
    int marg0 = -402661378;
    int marg1 = -1423867673;
    int marg2 = -1997797570;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate114() throws Exception {
    int marg0 = -1057226917;
    int marg1 = -1312885177;
    int marg2 = -2118721956;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate115() throws Exception {
    int marg0 = 357914026;
    int marg1 = -1610612738;
    int marg2 = -1610612739;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate116() throws Exception {
    int marg0 = -327354385;
    int marg1 = -809498573;
    int marg2 = -1784455170;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate117() throws Exception {
    int marg0 = 1073741911;
    int marg1 = 1073741826;
    int marg2 = 1073741824;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate118() throws Exception {
    int marg0 = 79;
    int marg1 = 63;
    int marg2 = 0;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate119() throws Exception {
    int marg0 = 1927593982;
    int marg1 = 1713218538;
    int marg2 = 534707116;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate120() throws Exception {
    int marg0 = 4;
    int marg1 = -3;
    int marg2 = -2147397808;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate121() throws Exception {
    int marg0 = 780140563;
    int marg1 = -1384120311;
    int marg2 = -2040802533;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate122() throws Exception {
    int marg0 = -592960952;
    int marg1 = -592960962;
    int marg2 = -1065353216;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate123() throws Exception {
    int marg0 = 1349222399;
    int marg1 = -798261249;
    int marg2 = -1911857934;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate124() throws Exception {
    int marg0 = 1616379886;
    int marg1 = -1492939206;
    int marg2 = -1979147777;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate125() throws Exception {
    int marg0 = -745734140;
    int marg1 = -745734147;
    int marg2 = -1663084909;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate126() throws Exception {
    int marg0 = 805085023;
    int marg1 = 666370305;
    int marg2 = -1590165506;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate127() throws Exception {
    int marg0 = -233889970;
    int marg1 = -1263354438;
    int marg2 = -2013265923;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate128() throws Exception {
    int marg0 = 832253990;
    int marg1 = -528321033;
    int marg2 = -1051553789;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate129() throws Exception {
    int marg0 = -58720256;
    int marg1 = 1071621805;
    int marg2 = -68288649;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate130() throws Exception {
    int marg0 = -2147483635;
    int marg1 = 44;
    int marg2 = -1636892671;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate131() throws Exception {
    int marg0 = -1071655165;
    int marg1 = -195995844;
    int marg2 = -1977335361;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate132() throws Exception {
    int marg0 = -165980417;
    int marg1 = 1040105475;
    int marg2 = -2036338722;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate133() throws Exception {
    int marg0 = -1560272894;
    int marg1 = -620765187;
    int marg2 = -1;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate134() throws Exception {
    int marg0 = -2147483615;
    int marg1 = 45;
    int marg2 = -2111457444;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate135() throws Exception {
    int marg0 = -2147483624;
    int marg1 = 42;
    int marg2 = -1870162297;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate136() throws Exception {
    int marg0 = -2121770081;
    int marg1 = 1741094817;
    int marg2 = -645830170;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate137() throws Exception {
    int marg0 = -2147483609;
    int marg1 = 48;
    int marg2 = -2126795813;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate138() throws Exception {
    int marg0 = -2147418105;
    int marg1 = -2147418112;
    int marg2 = -3;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate139() throws Exception {
    int marg0 = -885780;
    int marg1 = -2147475458;
    int marg2 = -2;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate140() throws Exception {
    int marg0 = 1596876494;
    int marg1 = -2147483645;
    int marg2 = -1;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate141() throws Exception {
    int marg0 = 1389247475;
    int marg1 = -856586501;
    int marg2 = -843590664;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate142() throws Exception {
    int marg0 = 1555129837;
    int marg1 = -1409286142;
    int marg2 = -1358954501;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate143() throws Exception {
    int marg0 = -329863724;
    int marg1 = -2147483632;
    int marg2 = -42;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate144() throws Exception {
    int marg0 = -1196951026;
    int marg1 = -2118668809;
    int marg2 = -1518267298;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate145() throws Exception {
    int marg0 = -983133376;
    int marg1 = -2147483647;
    int marg2 = -1;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate146() throws Exception {
    int marg0 = 1426339751;
    int marg1 = 705672966;
    int marg2 = 876241795;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate147() throws Exception {
    int marg0 = 1409762284;
    int marg1 = -2147483646;
    int marg2 = -2;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate148() throws Exception {
    int marg0 = 1682232311;
    int marg1 = -2147483646;
    int marg2 = -1;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate149() throws Exception {
    int marg0 = 822086006;
    int marg1 = -2147483646;
    int marg2 = -2;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = false;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate150() throws Exception {
    int marg0 = 805306366;
    int marg1 = -1879048185;
    int marg2 = -1342177281;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }

  @Test
  public void testEvaluate151() throws Exception {
    int marg0 = -23966338;
    int marg1 = -809631741;
    int marg2 = -8520342;
    boolean retval = ConvergingPaths.evaluate(marg0, marg1, marg2);

    boolean expected = true;
    Assertions.assertEquals(expected, retval);
  }
}
